;==============================================================================
; PYTEST CONFIGURATION FILE (pytest.ini)
;==============================================================================
; This file configures pytest behavior for the EaseMyTrip Flight Automation project.
; It defines how pytest discovers, runs, and reports on tests with enhanced stability.
;
; WHAT THIS FILE DOES:
; 1. Test Discovery    - Tells pytest which files/functions contain tests
; 2. Execution Control - Sets default options with anti-stuck mechanisms
; 3. Stability Features- Implements timeouts, forking, and failure limits
; 4. Logging Setup     - Configures detailed console and file logging
; 5. Test Organization - Defines custom markers for different test types
; 6. IDE Integration   - Ensures compatibility with PyCharm and VS Code
;
; KEY STABILITY FEATURES:
; - Timeout Protection: 300-second limit per test to prevent hanging
; - Process Forking: Isolates tests in separate processes to avoid conflicts
; - Failure Limiting: Stops after 3 failures to prevent endless stuck runs
; - Short Tracebacks: Concise error reporting for faster debugging
;
; USAGE:
; - Automatically loaded when running: pytest, python -m pytest, or run_tests.py
; - No manual import needed - pytest reads this configuration automatically
; - Provides consistent, stable test execution across different environments
;
; SUPPORTED TEST TYPES:
; - Part 1: Core automation tests (single flight search scenario)
; - Part 2: Data-driven tests (multiple test cases from JSON configuration)
; - UI Tests: Browser automation using Playwright with resource cleanup
; - Integration Tests: Tests requiring external resources and extended runtime
;==============================================================================

[pytest]

# Test File Discovery Patterns - tells pytest which files contain tests
python_files = test_*.py *_test.py test*.py
python_classes = Test*
python_functions = test_*

# Test Directory Location - where pytest looks for test files
testpaths = tests

# Minimum Pytest Version Required - ensures compatibility
minversion = 6.0

# Default Command Line Options - applied automatically to every pytest run
# These options provide stability and prevent stuck tests
addopts = --verbose --tb=short --disable-warnings --timeout=600 --forked --maxfail=3

# Test Markers - custom tags for organizing and filtering tests
# Usage: pytest -m part1 (run only Part 1 tests)
markers =
    part1: Part 1 core automation tests
    part2: Part 2 data-driven tests
    slow: Tests that take longer to execute
    integration: Integration tests requiring external resources
    ui: UI automation tests using Playwright

# Console Logging Configuration - what appears in terminal during test runs
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# File Logging Configuration - detailed logs saved to results/pytest.log
log_file = results/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# PyCharm IDE Compatibility Settings - ensures proper integration with IDEs
console_output_style = progress
